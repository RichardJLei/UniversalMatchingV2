steps:
  # Build the container image
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '-t', '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_IMAGE}',
      '--build-arg', 'FLASK_ENV=production',
      './backend'
    ]

  # Push the container image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_IMAGE}']

  # Deploy to Cloud Run with secrets and environment variables
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args: [
      'run', 'deploy', '${_SERVICE_NAME}',
      '--image', '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_IMAGE}',
      '--region', '${_REGION}',
      '--platform', 'managed',
      '--allow-unauthenticated',
      '--set-secrets=firebase-credentials=/secrets/firebase-credentials.json:latest',
      '--update-env-vars',
      'FLASK_ENV=production,DATABASE_NAME=universal_matching_db,AUTH_PROVIDER=firebase,AUTH_PROJECT_ID=universalmatchingv2,STORAGE_PROVIDER=gcs,STORAGE_PROJECT_ID=universalmatchingv2,STORAGE_BUCKET_NAME=universalmatchingv2'
    ]

substitutions:
  _SERVICE_NAME: universalmatchingv2
  _REGION: asia-southeast1
  _REPOSITORY: universalmatchingv2
  _IMAGE: backend

options:
  logging: CLOUD_LOGGING_ONLY

images:
  - 'gcr.io/$PROJECT_ID/${_SERVICE_NAME}' 